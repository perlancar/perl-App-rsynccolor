#!perl

# DATE
# VERSION

use 5.010001;
use strict;
use warnings;

use PerlIO::fgets;

sub sanity_check {
    require File::Which;
    File::Which::which("rsync") or die "rsync: Can't find rsync in PATH\n";
}

sub parse_cmdline {
}

sub run {
    require ShellQuote::Any::Tiny;

    my $cmd = "rsync" . (@ARGV ? " " : "") .
        join(" ", map { ShellQuote::Any::Tiny::shell_quote($_) } @ARGV);
    open my $rsync, "$cmd |" or die "rsynccolor: Can't run rsync: $!\n";

    my $use_color = $ENV{COLOR} // (-t STDOUT);

    $|++;

    my $start_of_line = 1;
    while (!eof($rsync)) {
        defined(my $line = fgets($rsync, 32))
            or die "rsynccolor: fgets failed: $!\n";

        if ($use_color && $start_of_line) {
            $line =~ s/^deleting /\e[31mdeleting \e[0m/;
        }
        print $line;
        $start_of_line = $line =~ /\R\z/;
    }

    close $rsync;
    exit $? >> 8;
}

# MAIN

sanity_check();
parse_cmdline();
run();

1;
# ABSTRACT: Add some color to rsync output
# PODNAME:

=head1 SYNOPSIS

Use as you would use B<rsync>:

 % rsynccolor -Pav --del dir1/ dir2/

To alias B<rsync> to B<rsynccolor>, in your shell startup file:

 alias rsync=rsynccolor


=head1 DESCRIPTION

This is a wrapper for the GNU command-line utility B<rsync>. It adds some color
to rsync output, currently:

  deleting FILENAME

will be highlighted in red to be more visually striking.


=head1 ENVIRONMENT

=head2 COLOR => bool

Force setting color on or off. Default is on when interactive.


=head1 SEE ALSO

=cut
